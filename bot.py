import os
import random
import time
import feedparser
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
from transformers import pipeline
import wikipediaapi

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞
summarizer = pipeline("summarization", model="Falconsai/text_summarization")  # –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –º–æ–¥–µ–ª—å

def get_rss_trends():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç—Ä–µ–Ω–¥–æ–≤ –∏–∑ RSS-–ª–µ–Ω—Ç –º–∏—Ä–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π"""
    try:
        # –°–ø–∏—Å–æ–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö RSS-–ª–µ–Ω—Ç
        sources = [
            "https://news.google.com/rss?hl=ru",
            "https://www.bbc.co.uk/news/world/rss.xml",
            "https://www.reuters.com/sitemap.xml"
        ]
        
        trends = []
        for source in sources:
            feed = feedparser.parse(source)
            for entry in feed.entries[:5]:  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å—Ç–∞—Ç–µ–π
                title = entry.title.lower()
                if any(word in title for word in ["–≤–∞–∂–Ω–æ", "–Ω–æ–≤–æ–µ", "–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"]):
                    trends.append(title.split()[0])  # –ë–µ—Ä–µ–º –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
        return list(set(trends))  # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ RSS: {e}")
        return ["—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "–∑–¥–æ—Ä–æ–≤—å–µ", "—ç–∫–æ–Ω–æ–º–∏–∫–∞"]

def generate_free_article(topic):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç—å–∏ —á–µ—Ä–µ–∑ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—é –í–∏–∫–∏–ø–µ–¥–∏–∏ + —à–∞–±–ª–æ–Ω"""
    wiki_wiki = wikipediaapi.Wikipedia('ru')
    
    try:
        # –ü–æ–∏—Å–∫ —Å—Ç–∞—Ç—å–∏ –ø–æ —Ç–µ–º–µ
        page_py = wiki_wiki.page(topic)
        if not page_py.exists():
            return f"–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ç–µ–º–µ '{topic}'"
            
        # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω–Ω—É—é —Å—Ç–∞—Ç—å—é
        article = f"""
üìå –¢–µ–º–∞: {topic}
üìä –ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å: {random.randint(80, 95)}%
üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {time.strftime("%Y-%m-%d")}
        
üîç –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–∫—Ç—ã:
1. {page_py.summary.split('.')[0]}
2. {page_py.summary.split('.')[1]}
3. {page_py.summary.split('.')[2]}

üí° –í—ã–≤–æ–¥—ã:
{summarizer(page_py.summary, max_length=150, min_length=50, do_sample=False)[0]['summary_text']}
        """
        return article.strip()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
        return "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—Ç–∞—Ç—å—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Ç–µ–º—É."

def start(update, context):
    update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø - –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –±–æ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç–µ–π.\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ /generate, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—å—é –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º —Ç–µ–º–∞–º."
    )

def generate(update, context):
    # –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–µ–Ω–¥—ã –∏–∑ RSS
    topics = get_rss_trends()
    selected_topic = random.choice(topics)
    
    update.message.reply_text(f"–ì–µ–Ω–µ—Ä–∏—Ä—É—é —Å—Ç–∞—Ç—å—é –ø–æ —Ç–µ–º–µ: {selected_topic}...")
    article = generate_free_article(selected_topic)
    
    # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏ (Telegram –ª–∏–º–∏—Ç - 4096 —Å–∏–º–≤–æ–ª–æ–≤)
    for i in range(0, len(article), 4000):
        update.message.reply_text(article[i:i+4000])
        time.sleep(1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —á–∞—Å—Ç—è–º–∏

def main():
    updater = Updater(os.getenv("TELEGRAM_TOKEN"), use_context=True)
    dp = updater.dispatcher
    
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("generate", generate))
    
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω... (–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è)")
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
